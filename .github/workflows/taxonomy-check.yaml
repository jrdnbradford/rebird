name: taxonomy-check

on:
  schedule:
    - cron: '0 13 * * 1' # Weekly on Mondays at 9AM EST
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  ISSUE_TITLE: 'eBird taxonomy different than expected'
  ISSUE_BODY: |
    This issue has been opened by the GitHub Action workflow `taxonomy-check`.

    The `tax` dataset is different than data retrieved using `rebird::ebirdtaxonomy()`. Potential causes of this could include:
      * an update to the eBird taxonomy
      * issues with eBird's API
      * different versions of R/packages resulting in data being loaded, retrieved, compared, and/or saved differently

    Check if there has been an update to eBird's taxonomy data. If not, investigate the other potential causes.

jobs:
  taxonomy-check-job:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
    outputs:
      result: ${{ steps.check-taxonomy.outputs.result }}
    steps:
      - name: checkout-step
        uses: actions/checkout@v4

      - name: setup-r-step
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: 'release'

      - name: setup-r-dependencies-step
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: local::.

      - name: check-taxonomy-step
        id: check-taxonomy
        run: Rscript data-raw/tax_check.R

  check-and-create-issue-job:
    needs: taxonomy-check-job
    if: needs.taxonomy-check-job.outputs.result == 'TRUE'
    runs-on: ubuntu-latest
    steps:
      - name: check-issue-step
        id: check-issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueTitle = process.env.ISSUE_TITLE;
            const { owner, repo } = context.repo;

            const issues = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: 'open',
            });

            const existingIssue = issues.data.find(issue => issue.title === issueTitle);

            if (existingIssue) {
              core.setOutput('exists', 'true');
            } else {
              core.setOutput('exists', 'false');
            }

      - name: create-issue-step
        if: ${{ steps.check-issue.outputs.exists == 'false' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueTitle = process.env.ISSUE_TITLE;
            const issueBody = process.env.ISSUE_BODY;
            const { owner, repo } = context.repo;

            await github.rest.issues.create({
              owner,
              repo,
              title: issueTitle,
              body: issueBody,
            });
